"""update the structure of users table.

Revision ID: dfefb8ab3912
Revises: a15889f46268
Create Date: 2024-04-09 09:54:08.839985

"""

from typing import Sequence, Union
from uuid import UUID

import sqlalchemy as sa
from sqlalchemy import orm, text

from alembic import op
from aqueductcore.backend.models.orm import User

# revision identifiers, used by Alembic.
revision: str = "dfefb8ab3912"
down_revision: Union[str, None] = "a15889f46268"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_experiment")
    op.add_column("user", sa.Column("username", sa.Text(), nullable=False))
    op.drop_index("ix_user_email", table_name="user")
    op.drop_column("user", "is_active")
    op.drop_column("user", "first_name")
    op.drop_column("user", "is_verified")
    op.drop_column("user", "is_superuser")
    op.drop_column("user", "last_name")
    op.drop_column("user", "email")
    op.drop_column("user", "hashed_password")

    bind = op.get_bind()
    session = orm.Session(bind=bind)
    user = User(id=UUID(int=0), username="admin")
    session.add(user)
    session.commit()

    op.add_column("experiment", sa.Column("created_by", sa.Uuid(), nullable=True))
    bind.execute(
        text(
            "UPDATE experiment \
            SET created_by = '00000000-0000-0000-0000-000000000000'"
        )
    )
    op.alter_column("experiment", "created_by", nullable=False)
    op.create_foreign_key(None, "experiment", "user", ["created_by"], ["id"])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column("hashed_password", sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    )
    op.add_column(
        "user", sa.Column("email", sa.VARCHAR(length=320), autoincrement=False, nullable=False)
    )
    op.add_column("user", sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(
        "user", sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "user", sa.Column("is_verified", sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.add_column("user", sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("user", sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index("ix_user_email", "user", ["email"], unique=True)
    op.drop_column("user", "username")
    op.create_unique_constraint("tag_key_key", "tag", ["key"])
    op.drop_constraint(None, "experiment", type_="foreignkey")
    op.drop_column("experiment", "created_by")
    op.create_table(
        "user_experiment",
        sa.Column("experiment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["experiment_id"], ["experiment.id"], name="user_experiment_experiment_id_fkey"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name="user_experiment_user_id_fkey"),
    )
    # ### end Alembic commands ###
