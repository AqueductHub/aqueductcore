name: Release Aqueductcore

on:
  schedule:
    - cron: "30 11 * * 1"
jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ env.ALLOW_AUTOMATED_RELEASE == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Confirm action execution
        id: is_release_allowed_check
        run: |
          echo "is_release_allowed=$(( $(date +%V) % 2 == 0 ))" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to registry
        uses: docker/login-action@v3
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setting up Python
        uses: actions/setup-python@v2
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        with:
          python-version: 3.8
      
      - name: Get current release version and calculate next patch version
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        id: next_version
        run: |
          git fetch --tags
          CURRENT_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          NEXT_VERSION=$(echo $CURRENT_VERSION | awk -F. '{ printf "%d.%d.%d", $1, $2, $3+1 }')
          echo "version=$NEXT_VERSION" >> $GITHUB_OUTPUT

          if $(( $(date +%U) % 2 == 0 ))  {
            exit 0
          }

      - name: Build Release Images
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        run: ci/build_docker_image.sh -i aqueductcore -p true -t ${{ steps.next_version.outputs.version }}

      - name: Build final archived file
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        run: |
          cp scripts/release/docker-compose.yaml ./build \
          && cp scripts/release/install.sh ./build \
          && cp scripts/release/uninstall.sh ./build

          cd build && tar -cvzf aqueduct_v${{ steps.next_version.outputs.version }}.tar.gz \
          aqueductcore.tar \
          docker-compose.yaml \
          install.sh \
          uninstall.sh

      - name: Create release and upload artifacts
        uses: ncipollo/release-action@v1.12.0
        if: ${{ steps.is_release_allowed_check.outputs.is_release_allowed }}
        with:
          tag: ${{ steps.next_version.outputs.version }}
          name: "${{ steps.next_version.outputs.version }}"
          allowUpdates: true
          generateReleaseNotes: true
          artifacts: "build/aqueduct_v${{ steps.next_version.outputs.version }}.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
