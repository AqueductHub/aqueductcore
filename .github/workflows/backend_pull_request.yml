name: Static Analysis and Unit Tests

on:
  push:
    branches: [main, feat-*]
  pull_request:
    branches: [main, feat-*]
  workflow_dispatch:

jobs:
  pytest:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_GITHUB_REPO_PAT }}
          submodules: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests and build coverage report
        run: ci/unit_tests.sh

  coverage_report:
    strategy:
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_GITHUB_REPO_PAT }}
          submodules: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests and build coverage report
        run: ci/coverage_report.sh

      - name: Comment coverage report
        uses: MishaKav/pytest-coverage-comment@v1.1.25
        if: ${{ (github.actor != 'dependabot[bot]')}}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_GITHUB_REPO_PAT }}
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Run unit tests and build coverage report
        run: ci/pylint.sh
